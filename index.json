[{"authors":null,"categories":null,"content":"Hi, I’m Avi! I study black holes that smash into one another. More specifically, I use gravitational waves emitted from merging black holes to make inferences using Bayesian techniques. I am currently a postdoctoral research fellow at the University of Auckland, working with Prof. Renate Meyer. I am also a member of the LIGO-Virgo-KAGRA Collaboration, and the OzGrav Centre of Excellence.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1682576e3,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Hi, I’m Avi! I study black holes that smash into one another. More specifically, I use gravitational waves emitted from merging black holes to make inferences using Bayesian techniques. I am currently a postdoctoral research fellow at the University of Auckland, working with Prof.","tags":null,"title":"","type":"authors"},{"authors":["Avi Vajpeyi","Rory Smith","Eric Thrane"],"categories":[],"content":"","date":1680307200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"d20f4df3aa3ba5509e006129ff898ef6","permalink":"https://avivajpeyi.github.io/publication/vajpeyi-2023-ap-j/","publishdate":"2023-04-27T03:38:06.025745Z","relpermalink":"/publication/vajpeyi-2023-ap-j/","section":"publication","summary":"","tags":["Black holes","Gravitational waves","Gravitational wave astronomy","Astronomical methods","Bayesian statistics","LIGO","162","678","675","1043","1900","920","Astrophysics - High Energy Astrophysical Phenomena","General Relativity and Quantum Cosmology"],"title":"Deep Follow-up for Gravitational-wave Inference: A Case Study with GW151226","type":"publication"},{"authors":["Avi Vajpeyi","Rory Smith","Eric Thrane","Gregory Ashton","Thomas Alford","Sierra Garza","Maximiliano Isi","Jonah Kanner","T.~J. Massinger","Liting Xiao"],"categories":[],"content":"","date":1667260800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"9824769cdb69029090ad5e01c3ce883f","permalink":"https://avivajpeyi.github.io/publication/vajpeyi-2022-mnras/","publishdate":"2023-04-27T03:38:06.510753Z","relpermalink":"/publication/vajpeyi-2022-mnras/","section":"publication","summary":"","tags":["gravitational waves","methods: data analysis","methods: statistical","black hole mergers","General Relativity and Quantum Cosmology","Astrophysics - High Energy Astrophysical Phenomena","Physics - Data Analysis","Statistics and Probability"],"title":"A follow-up on intermediate-mass black hole candidates in the second LIGO-Virgo observing run with the Bayes Coherence Ratio","type":"publication"},{"authors":["B. McKernan","K.~E.~S. Ford","T. Callister","W.~M. Farr","R. O'Shaughnessy","R. Smith","E. Thrane","A. Vajpeyi"],"categories":[],"content":"","date":1659312e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"230416d10a8aef9cbb10119e9f1f888e","permalink":"https://avivajpeyi.github.io/publication/mc-kernan-2022-mnras/","publishdate":"2023-04-27T03:38:06.904187Z","relpermalink":"/publication/mc-kernan-2022-mnras/","section":"publication","summary":"","tags":["accretion","accretion discs","black hole physics","gravitational waves","galaxies: active","Astrophysics - High Energy Astrophysical Phenomena","Astrophysics - Astrophysics of Galaxies"],"title":"LIGO-Virgo correlations between mass ratio and effective inspiral spin: testing the active galactic nuclei channel","type":"publication"},{"authors":[],"categories":[],"content":" Table of Contents Do you really need pBilby for your analysis? Setting up pbilby on Ozstar Making a venv for analysis Installing pBilby Local Configuring your ini file Submitting jobs Job setup step Starting jobs immediately: Starting jobs with lots of cores: Monitoring jobs Checking the queue Checking the job output Do you really need pBilby for your analysis? For most analysis, bilby_pipe may be sufficient (and better suited!):\nbilby_pipe has can easily download propritary LVK data. bilby_pipe is well configured to run many jobs in parallel. Cluster-wait times for a pbilby job can be longer than the time it takes to run bilby_pipe. pBilby should only be used if you want to run an expensive job (e.g. lots of live points, or expensive waveform model).\nSetting up pbilby on Ozstar Making a venv for analysis Before installing pBilby, lets set up some virtual python environments.\n\u0026lt;ssh into ozstar\u0026gt; module --force purge module load git/2.18.0 git-lfs/2.4.0 gcc/9.2.0 openmpi/4.0.2 numpy/1.19.2-python-3.8.5 mpi4py/3.0.3-python-3.8.5 \u0026amp;\u0026amp; module unload zlib python -m venv pbilby_venv source pbilby_venv/bin/activate Choosing a dir for your venv\nYour venv will be faster to boot-up if you make it in your /home/ directory, rather than in /fred/ (as the latter is on a network drive). However, /home/ has a very small amount of storage space.\nYou will need to load the same modules every time you want to use the pbilby_venv environment. I recommend adding the following to your .bashrc file:\nalias ligo_loads=\u0026#39;module --force purge \u0026amp;\u0026amp; module load git/2.18.0 git-lfs/2.4.0 gcc/9.2.0 openmpi/4.0.2 numpy/1.19.2-python-3.8.5 mpi4py/3.0.3-python-3.8.5 \u0026amp;\u0026amp; module unload zlib \u0026amp;\u0026amp; source /fred/oz980/avajpeyi/envs/pbilby_venv/bin/activate\u0026#39; Then, anytime you ssh onto Ozstar, you can just type ligo_loads to load the modules and activate the pbilby_venv environment.\nAlternative partitions If you want to use partitions other skylake, eg sstar/gstar, you’ll need to ssh sstar/ssh gstar and make a new venv for each partiton you want to run on.\n\u0026lt;ssh into ozstar\u0026gt; ssh sstar \u0026lt;same steps as above\u0026gt; A new venv is needed is as each partition has custom architecture and cant use builds from other architectures.\nWhy not use conda? conda has a large overhead compared to venv (e.g. conda takes 10s to load, while venv takes 1s). The above import parallel_bilby took several minutes on Ozstar using conda!\nInstalling pBilby Now, we can install pBilby (note sstar/gstar dont have access to the internet, so you’ll need to install pBilby when on farnarkle):\npip install parallel_bilby If you’re not doing a vanilla analysis, I would suggest the following method to install pbilby:\ngit clone git@git.ligo.org:lscsoft/parallel_bilby.git cd parallel_bilby python setup.py develop develop mode is useful as it allows you to edit the source code and have the changes take effect immediately. This is useful if you want to make changes to pBilby.\nLocal In addition to Ozstar, I would suggest installing pBilby on your local machine to help with debugging/making sure your analysis can actually start running.\nConfiguring your ini file The pBilby ini is very similar to the bilby_pipe ini, but with a few extra options. Here is an example ini for GW150914 analysis: You can remove the custom pBilby options and run the analysis with bilby_pipe to see if it works. Note that you will need to manually get the data and PSD files for the analysis to work.\nData: Here is a helper script to get the data: The easiest way I find to get data is\nOn CIT: ligo-proxy-init avi.vajpeyi \u0026amp;\u0026amp; kinit Run above py srcipt scp data CIT--\u0026gt;Ozstar PSD: You can get PSDs from the LSC PSD database. Note that the PSDs have to be formatted in the same way as those for bilby_pipe jobs. For GW150914 you can get away with downloading it from the pBilby examples\nSubmitting jobs Job setup step Once you have your ini and data/PSD files, you can submit a job to Ozstar using the following command:\nparallel_bilby_generate \u0026lt;ini\u0026gt; This should generate a folder called outdir (or whatever you specified in the ini file) with a bunch of files in it. E.g. this is what my dir looks like:\noutdir_GW150914 ├── data │ ├── GW150914_data_dump.pickle │ ├── GW150914_prior.json │ ├── H1_full_frequency_domain_data.png │ └── L1_full_frequency_domain_data.png ├── GW150914_config_complete.ini ├── log_data_analysis ├── log_data_generation ├── result └── submit ├── analysis_GW150914_0.sh └── bash_GW150914.sh The submit folder contains the scripts that will be submitted to the slurm queue.\nTo test if the job will run, you can try running the analysis_GW150914_0.sh script locally. First, identify the execution command in the script. It should look something like this:\nmpirun parallel_bilby_analysis \u0026lt;...data_dump.pickle\u0026gt; .... To run this locally, copy the above line, and run it like so:\nmpirun -n 2 parallel_bilby_analysis \u0026lt;...data_dump.pickle\u0026gt; .... This asks mpi to run the parallel_bilby_analysis script with 2 cores on the headnode. If this reaches the …","date":1656426045,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"18cc6595972db8d4aa4559c569ac7128","permalink":"https://avivajpeyi.github.io/posts/pbilby_setup_notes/","publishdate":"2022-06-29T00:20:45+10:00","relpermalink":"/posts/pbilby_setup_notes/","section":"posts","summary":"Some pbilby setup notes for myself","tags":[],"title":"Avi's Pbilby Setup Notes","type":"book"},{"authors":["Avi Vajpeyi","Eric Thrane","Rory Smith","Barry McKernan","K.~E. Saavik Ford"],"categories":[],"content":"","date":1654041600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"eb1ae3af0bda727b1076d62cd0af8515","permalink":"https://avivajpeyi.github.io/publication/vajpeyi-2022-ap-j/","publishdate":"2023-04-27T03:38:07.357769Z","relpermalink":"/publication/vajpeyi-2022-ap-j/","section":"publication","summary":"","tags":["Gravitational waves","Active galactic nuclei","Bayesian statistics","678","16","1900","General Relativity and Quantum Cosmology","Astrophysics - High Energy Astrophysical Phenomena"],"title":"Measuring the Properties of Active Galactic Nuclei Disks with Gravitational Waves","type":"publication"},{"authors":["Susan Y Lehman","Lilianna E Christman","DT Jacobs","Nathan SDEF Johnson","Paroma Palchoudhuri","Catherine E Tieman","Avi Vajpeyi","Elliot R Wainwright","Justine E Walker","Ian S Wilson"," others"],"categories":[],"content":"","date":1640995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"e4941916cea478a098ae5cc52213cfd9","permalink":"https://avivajpeyi.github.io/publication/lehman-2022-universal/","publishdate":"2023-04-27T03:38:09.932616Z","relpermalink":"/publication/lehman-2022-universal/","section":"publication","summary":"","tags":[],"title":"Universal aspects of cohesion","type":"publication"},{"authors":[],"categories":[],"content":" Table of Contents Interactive Jobs Jupyter notebooks + Slurm Plot CPU hours used for jobs Interactive Jobs If you want to test softwre that requires GUI, MPI/Parallel/Multiple threads using interactive jobs may be useful. Note that if you need a GUI – you’ll need to ssh with -X.\nRun the following to start an interactive job:\nsinteractive --ntasks 1 --nodes 1 --time 00:30:00 --mem 2GB Once resources are allocated, you’ll notice that you’re on a different machine (allocated for your interactive session).\nJupyter notebooks + Slurm Once are in an interactive job session you can open a jupyter notebook with the following steps:\nSource envs for you interactive session For example you may run the following:\nsource ~/.bash_profile module load git/2.18.0 gcc/9.2.0 openmpi/4.0.2 python/3.8.5 source venv/bin/activate Setup tunnel + jupyter instance on cluster\nTo do this run the following:\nipnport=$(shuf -i8000-9999 -n1) ipnip=$(hostname -i) echo \u0026#34;Run on local \u0026gt;\u0026gt;\u0026gt; ssh -N -L $ipnport:$ipnip:$ipnport avajpeyi@ozstar.swin.edu.au\u0026#34; jupyter-notebook --no-browser --port=$ipnport --ip=$ipnip Local connection to interactive job\nrun the command echoed above open the link to the jupyer notebook (printed in the previous window) Run exit when done!\nOtherwise the job will keep running until it times out.\nFor convenience I have added the following to my OzStar .bash_profile\n# Interactive Jupter notebooks alias start_ijob=\u0026#34;sinteractive --ntasks 2 --time 00:60:00 --mem 4GB\u0026#34; start_jupyter () { ipnport=$(shuf -i8000-9999 -n1) ipnip=$(hostname -i) echo \u0026#34;Run on local \u0026gt;\u0026gt;\u0026gt;\u0026#34; echo \u0026#34;ssh -N -L $ipnport:$ipnip:$ipnport avajpeyi@ozstar.swin.edu.au\u0026#34; jupcmd=$(jupyter-notebook --no-browser --port=$ipnport --ip=$ipnip) } export -f start_jupyter Now I can start a interactive job by running start_ijob and start the jupter notebook with start_jupyter.\nPlot CPU hours used for jobs The folowing creates a file jobstats.txt that contains the CPU time (seconds) for each job run bw the start+end time specified.\nsacct -S 2021-01-01 -E 2021-10-06 -u avajpeyi -X -o \u0026#34;jobname%-40,cputimeraw\u0026#34; --parsable2 \u0026gt; jobstats.txt To plot the data you can use the following: Total CPU hours I’ve used (‘19-‘22) ","date":1634653245,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"77810f6a5c9cafef3f0dcf5d16b03f21","permalink":"https://avivajpeyi.github.io/posts/slurm-notes/","publishdate":"2021-10-20T00:20:45+10:00","relpermalink":"/posts/slurm-notes/","section":"posts","summary":"Some notes on using slurm for HPC.","tags":[],"title":"Slurm Notes","type":"book"},{"authors":["Daniel Williams","Duncan Macleod","Avi Vajpeyi","James Clark"],"categories":[],"content":"","date":1625097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"4a8143ddb684a6022ab30778d9f11b23","permalink":"https://avivajpeyi.github.io/publication/williams-2021-zndo/","publishdate":"2023-04-27T03:38:07.666872Z","relpermalink":"/publication/williams-2021-zndo/","section":"publication","summary":"","tags":[],"title":"transientlunatic/asimov: v0.3.2","type":"publication"},{"authors":["Juan Calderón Bustillo","Nicolas Sanchis-Gual","Alejandro Torres-Forné","José A. Font","Avi Vajpeyi","Rory Smith","Carlos Herdeiro","Eugen Radu","Samson H.~W. Leong"],"categories":[],"content":"","date":1612137600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"082e9846ef056b7276e7067a9ec9cb5d","permalink":"https://avivajpeyi.github.io/publication/bustillo-2021-ph-rv-l/","publishdate":"2023-04-27T03:38:07.996111Z","relpermalink":"/publication/bustillo-2021-ph-rv-l/","section":"publication","summary":"","tags":["General Relativity and Quantum Cosmology","Astrophysics - High Energy Astrophysical Phenomena","High Energy Physics - Phenomenology"],"title":"GW190521 as a Merger of Proca Stars: A Potential New Vector Boson of 8.7 ×10$^-13$ eV","type":"publication"},{"authors":["I.~M. Romero-Shaw","C. Talbot","S. Biscoveanu","V. D'Emilio","G. ... incl Vajpeyi, A. Ashton","et al."],"categories":[],"content":"","date":1606780800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"e19c73cacb880499facc07ad8a1010bd","permalink":"https://avivajpeyi.github.io/publication/romero-shaw-2020-mnras/","publishdate":"2023-04-27T03:38:08.395939Z","relpermalink":"/publication/romero-shaw-2020-mnras/","section":"publication","summary":"","tags":["gravitational waves","methods: data analysis","stars: neutron","stars: black holes","transients: black hole mergers","transients: neutron star mergers","Astrophysics - Instrumentation and Methods for Astrophysics","General Relativity and Quantum Cosmology"],"title":"Bayesian inference for compact binary coalescences with BILBY: validation and application to the first LIGO-Virgo gravitational-wave transient catalogue","type":"publication"},{"authors":["Rory J.~E. Smith","Gregory Ashton","Avi Vajpeyi","Colm Talbot"],"categories":[],"content":"","date":1604188800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"c4c45cca245c0411a864407f4e57cb3a","permalink":"https://avivajpeyi.github.io/publication/smith-2020-mnras/","publishdate":"2023-04-27T03:38:08.967086Z","relpermalink":"/publication/smith-2020-mnras/","section":"publication","summary":"","tags":["gravitational waves","methods: data analysis","General Relativity and Quantum Cosmology","Astrophysics - Instrumentation and Methods for Astrophysics"],"title":"Massively parallel Bayesian inference for transient gravitational-wave astronomy","type":"publication"},{"authors":[],"categories":[],"content":" Table of Contents A Conceptual Discussion Matched filtering in human brains Matched filtering in LIGO data The maths Optimal detection statistic Gaussian noise Matched-Filter The code Defining signals and noise Defining the matched-filtering code Examples of matched-filtering Code for demo A Conceptual Discussion Matched filtering in human brains Human brains do a form of matched filtering when brains classify certain sounds as ‘words’. Eardrums are vibrated by sound waves and brains compare these sound waves to other template sound waves that are known. In the case of words, brains compare the sound waves with a bank of sound waves from learned words. This process is similar to how LIGO data analysts use matched filtering to find gravitational waves in LIGO data.\nMatched filtering in LIGO data Compact binary coalesence (CBC) searches like PyCBC use matched filtering to find gravitational wave signals in LIGO strain data. This method compares a gravitational wave template (numerical values representing one perticular gravitational wave) to strain data. Before the strain data is compared to the gravitational wave template, the data is weighed based on the detector’s sensitivity (lower the weight of the data that comes from a region where the detector is not sensitive). The output of matched-filtering is a signal-to-noise ratio (SNR) that can be used to determine if the data contains something interesting (a potential gravitational wave candidate) or just noise.\nThere are many possible gravitational wave templates (gravitational waves from CBCs can have 15 parameters that can describe them hence there are $O(n^{15})$ possible templates). To compute a matched-filter SNR for each of these templates with the LIGO data is computationally expensive. Hence, instead of match-filtering with all templates, only a subset of templates to be used in matched-filtering is selected and stored in a template bank. The bank is created to cover as much of the parameter space as possible by storing only the unique looking templates.\nAn example template bank used by LIGO searches. The maths Optimal detection statistic The first question LIGO data analysts ask when they receive LIGO strain data $s(t)$ is:\nDoes the $s(t)$ consist only of noise $n(t)$ or does $s(t)$ contain a gravitational wave signal $h(t)$ hidden in the noise?\nThe two situations are two different hypotheses about the strain data:\nNull Hypothesis, $\\mathcal{H}_{n}: n(t) = s(t)$, and GW Hypothesis, $\\mathcal{H}_{GW}: n(t) = s(t) - h(t)$. Bayes theorem can answer which of the two hypotheses are favoured by the data with an odds ratio: \\begin{equation} \\label{eq:odds} \\begin{split} \\mathcal{O}(\\mathcal{H}{GW}| s) \u0026amp; = \\frac{P(\\mathcal{H}{GW}|s)}{ P(\\mathcal{H}_{n} | s)} . \\end{split} \\end{equation}\nThis odds ratio is the optimal detection statistic that expresses the value of the probability that the data contains the anticipated signal be calculated when\nthe statistical properties of the noise process are known the exact form of the signal is known The following subsections describe in detail the statistical properties of the noise and signal that permit LIGO data analysts to calculate $\\mathcal{O}(\\mathcal{H}| s)$.\nGaussian noise To simplify the ability to make a detection, noise $n(t)$ is assumed to be [stationary Gaussian white noise]. For Gaussian white noise time series data that is sampled at regular intervals of $\\Delta t$, the probability of collecting a set of $N$ datapoints $\\vec{n}$, where $$\\vec{n} = \\{n_0(t=0), n_1(t=\\Delta t), n_2(t=2 \\Delta t), …, n_{N-1}(t= (N-1) \\Delta t) \\}$$ from $0\\leq t\\leq T$, can be written as: \\begin{equation} \\label{eq:gaussian} \\begin{split} p_n(\\vec{n}) \u0026amp;= \\prod^{N-1}0 \\frac{1}{\\sigma\\sqrt{2\\pi}}\\ \\text{exp}\\left( \\frac{-1}{2\\sigma^2} n_i^2 \\right) \\\\ \u0026amp;= \\frac{1}{(\\sigma\\sqrt{2\\pi})^N}\\ \\text{exp}\\left( \\frac{-1}{2\\sigma^2} \\sum^{N-1}{i=0} n_i^2 \\right) \\end{split} \\end{equation} the following subsections delve into the maths required to simplify this.\nSumming samples For $\\lim {\\Delta t \\to 0}$, $\\sum^{N}_{i=1} n_i^2$ turns into an integral:\n\\begin{equation} \\label{eq:gauss_limit} \\begin{split} \\lim_{\\Delta t \\to 0} \\sum^{N}{i=1} n_i^2 \\Delta t \u0026amp;= \\int^T_0 n^2(t) dt \\\\ \u0026amp;= \\text{(Parseval’s Theorem and assume $0 \\to T$ very large?)} \\\\ \u0026amp;\\approx \\int^{-\\infty}{+\\infty} |\\widetilde{n}(f)|^2 df \\end{split} \\end{equation}\nAutocorrelation function for Gaussian Noise Additionally, as $\\lim {\\Delta t \\to 0}$, we can also get an expression for the autocorrelation function.\nAutocorrelation Function:\nThe autocorrelation function is a tools used to find patterns in time-series data. There are two types:\nEnsemble autocorrelation: quantifies correclation between points after repeated trials Temporal autocorrelation: quantifies correlation between points separated by various time lags in the same time-series As points become more separated, typically the temporal autocorrelation function should go to 0 (since it is difficult to to …","date":1593354045,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"4a1ce4d75e3cf75a5a96e251efb92276","permalink":"https://avivajpeyi.github.io/posts/matched-filtering/","publishdate":"2020-06-29T00:20:45+10:00","relpermalink":"/posts/matched-filtering/","section":"posts","summary":"Matched filtering in LIGO data analysis","tags":[],"title":"Matched Filtering","type":"posts"},{"authors":[],"categories":[],"content":"Here are some of my note written on OneNote:\n\u0026lt;!DOCTYPE html\u0026gt; ","date":1593354045,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"54b4150f070210415ef4f05c2e4f17c1","permalink":"https://avivajpeyi.github.io/posts/understanding-exoplanet-transits/","publishdate":"2020-06-29T00:20:45+10:00","relpermalink":"/posts/understanding-exoplanet-transits/","section":"posts","summary":" ","tags":[],"title":"Understanding exoplanet transits","type":"posts"},{"authors":[],"categories":[],"content":"","date":1592492452,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"722e64bc716e6fffea1fc463edde8a3e","permalink":"https://avivajpeyi.github.io/games/glass-runner/","publishdate":"2020-06-19T01:00:52+10:00","relpermalink":"/games/glass-runner/","section":"games","summary":"","tags":["game","proc-gen"],"title":"Glass Runner","type":"games"},{"authors":[],"categories":[],"content":" 20 colorblind cols. Note the colors are very similar after ~10. ","date":1592490045,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"b4d45f23bdc5a5f998c4141061ddd8ce","permalink":"https://avivajpeyi.github.io/posts/colorblind-palette-for-plotting/","publishdate":"2020-06-19T00:20:45+10:00","relpermalink":"/posts/colorblind-palette-for-plotting/","section":"posts","summary":"Choosing colors is a pain. This snippet helps choose colors.","tags":[],"title":"Colorblind Palette for Plotting","type":"posts"},{"authors":[],"categories":[],"content":"What are the Big-O for the following? Some students in an Algorithms class I am teaching are having trouble with Big-O notation. Here are some practice problems:\nQs 1 for i in range(n): sum++ Answer O(n) Qs 2 for i in range(n) for j in range(n) sum+=1 Answer O(n) Qs 3 for i in range(n, - 1, -1): sum +=1 Answer O(n^2) Qs 4 i = 1 while i\u0026lt;n: i *= 2 Answer O(2^n) Qs 5 i = n while (i \u0026lt; n) i ++ Answer O(1) Qs 6 def fibonacci(n): if (n \u0026lt;= 1): return n else: return(fibonacci(n - 2) + fibonacci(n -1)) Answer O(2^n) Qs 7 i = 0 while (i \u0026gt; n) i *= 2 Answer O(1) Qs 8 for(int i=n; i\u0026gt;0; i/=2) for(int j=0; j\u0026lt;i; j++) count++; Answer O(n) Qs 9 for(int i=1; i\u0026lt;n*n; i++) for(int j=1; j≤i; j++) for(int k=1; k≤ 6; k++) sum ++; Answer O(n^4) ","date":1592490045,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"7e85c613bba535c1ffb22012d0811696","permalink":"https://avivajpeyi.github.io/posts/python-big-o-examples/","publishdate":"2020-06-19T00:20:45+10:00","relpermalink":"/posts/python-big-o-examples/","section":"posts","summary":"Exaples of Big-O code snippets","tags":[],"title":"Python Big-O Examples","type":"posts"},{"authors":[],"categories":[],"content":"","date":1592488566,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"0a934d27452e42bbd86d475f1d95fe73","permalink":"https://avivajpeyi.github.io/games/tunnel-vision/","publishdate":"2020-06-18T23:56:06+10:00","relpermalink":"/games/tunnel-vision/","section":"games","summary":"","tags":["game","proc-gen"],"title":"Tunnel Vision","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488557,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"a626cc2fc531df0406950afccee845eb","permalink":"https://avivajpeyi.github.io/games/boogie-block/","publishdate":"2020-06-18T23:55:57+10:00","relpermalink":"/games/boogie-block/","section":"games","summary":"","tags":["game"],"title":"Boogie Block","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488549,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"c1fe4a39a392fdce6ccf8d4423ca4a2f","permalink":"https://avivajpeyi.github.io/games/vitality/","publishdate":"2020-06-18T23:55:49+10:00","relpermalink":"/games/vitality/","section":"games","summary":"","tags":["game"],"title":"Vitality","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488540,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"080537f1d3ecfed5451d5ae3efb3e4f6","permalink":"https://avivajpeyi.github.io/games/chain-game/","publishdate":"2020-06-18T23:55:40+10:00","relpermalink":"/games/chain-game/","section":"games","summary":"","tags":["game"],"title":"Chain Game","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488519,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"dd2d763603a9e58e43dca760aa98aca2","permalink":"https://avivajpeyi.github.io/games/taxi-tank/","publishdate":"2020-06-18T23:55:19+10:00","relpermalink":"/games/taxi-tank/","section":"games","summary":"","tags":["game"],"title":"Taxi Tank","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"397c3c50fbf1acbcf23c50c32f68e2b5","permalink":"https://avivajpeyi.github.io/games/bh-visualiser/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/bh-visualiser/","section":"games","summary":"","tags":["game"],"title":"BH Visualiser","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"f6ae775a0f1dea2d3edf7ec637d8ba97","permalink":"https://avivajpeyi.github.io/games/calm-your-farm/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/calm-your-farm/","section":"games","summary":"","tags":["game"],"title":"Calm your farm","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"b1073ebb84256b85d24aae600e7781fc","permalink":"https://avivajpeyi.github.io/games/goat-flu/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/goat-flu/","section":"games","summary":"","tags":["game"],"title":"Goat Flu","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"9777ca3e6386f1f9030afebbc6cbc8bf","permalink":"https://avivajpeyi.github.io/games/dot-blaster/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/dot-blaster/","section":"games","summary":"","tags":["game"],"title":"Hayday","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"47c3197e82a866a779ba1d1154ed38ae","permalink":"https://avivajpeyi.github.io/games/hayday/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/hayday/","section":"games","summary":"","tags":["game"],"title":"Hayday","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"061d0879c6ec6614c7b2a2d161a0adb8","permalink":"https://avivajpeyi.github.io/games/hide-and-seek/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/hide-and-seek/","section":"games","summary":"","tags":["game","proc-gen","ML-Agent"],"title":"Hide n Seek","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"8f543dfd1ab3a3beffcbb6f3b7d2556e","permalink":"https://avivajpeyi.github.io/games/looper/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/looper/","section":"games","summary":"","tags":["game","proc-gen","voice"],"title":"Looper","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"d7c3ac629e4b93a3f35f798f4f9feaf7","permalink":"https://avivajpeyi.github.io/games/move-it/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/move-it/","section":"games","summary":"","tags":["game","voice"],"title":"Move It","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"fe0ebca848e2ca10fd66abe075026ea6","permalink":"https://avivajpeyi.github.io/games/shatter-bot/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/shatter-bot/","section":"games","summary":"","tags":["game","proc-gen"],"title":"Shatter Bot","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"567468e0f77b8fe79a97cc97f20d389b","permalink":"https://avivajpeyi.github.io/games/sleepy-sam/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/sleepy-sam/","section":"games","summary":"","tags":["game","proc-gen"],"title":"Sleepy Sam","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488513,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"f49d441876b72333d34a1a07c4e99c4a","permalink":"https://avivajpeyi.github.io/games/three-body/","publishdate":"2020-06-18T23:55:13+10:00","relpermalink":"/games/three-body/","section":"games","summary":"","tags":["game","ML-Agent"],"title":"Three Body","type":"games"},{"authors":[],"categories":[],"content":"","date":1592488506,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"0dafc321acc68ba22cd4ce719814e0dc","permalink":"https://avivajpeyi.github.io/games/soul-collector/","publishdate":"2020-06-18T23:55:06+10:00","relpermalink":"/games/soul-collector/","section":"games","summary":"","tags":["game"],"title":"Soul Collector","type":"games"},{"authors":[],"categories":[],"content":"","date":1592452787,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"84ccc3b82447f718404791a6be14385b","permalink":"https://avivajpeyi.github.io/games/time-turner/","publishdate":"2020-06-18T13:59:47+10:00","relpermalink":"/games/time-turner/","section":"games","summary":"","tags":["game"],"title":"Time Turner","type":"games"},{"authors":[],"categories":[],"content":"For my PhD canditure I have to produce some reports documenting my progress:\n6 months: Initial Project Review Report 12 months: Confirmation Report Note: to view these documents you may have to click on “Advanced \u0026gt; Proceed”.\n","date":1586442045,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"d41c11bf4087e541b7ecc7ee68ef20bf","permalink":"https://avivajpeyi.github.io/posts/phd-reports/","publishdate":"2020-04-10T00:20:45+10:00","relpermalink":"/posts/phd-reports/","section":"posts","summary":"Links to my canditure reports","tags":[],"title":"PhD Reports","type":"posts"},{"authors":[],"categories":[],"content":"Steps Step 0: Requirements Module loads/things you might need:\nmodule load git/2.18.0 module load git-lfs/2.4.0 module load anaconda3/5.1.0 module load gcc/6.4.0 module load openmpi/3.0.0 module load fftw/3.3.7 module load swig/3.0.12-python-3.6.4 module load framel/8.30 module load metaio/8.4.0 module load gsl/2.4 Step 1: Install lal git clone git@git.ligo.org:lscsoft/lalsuite.git mkdir lal_install_dir cd lalsuite/lal ./00boot \u0026amp;\u0026amp; ./configure --prefix=/\u0026lt;path to\u0026gt;/lal_install_dir/ \u0026amp;\u0026amp; make \u0026amp;\u0026amp; make install . \u0026lt;path to\u0026gt;/lal_install_dir/etc/lal-user-env.sh Step 2: Install lalsimulation cd ../lalsimulation ./00boot \u0026amp;\u0026amp; ./configure --prefix=/\u0026lt;path to\u0026gt;/lal_install_dir/ \u0026amp;\u0026amp; make \u0026amp;\u0026amp; make install \u0026lt;path to\u0026gt;/lal_install_dir/etc/lalsimulation-user-env.sh At this point, the installation should(?) work. Test it out in python:\ncd ~ python \u0026gt;\u0026gt;\u0026gt; import lalsimulation Step 3: Get waveform data cd ~/ \u0026amp; mkdir waveform_data echo \u0026#34;export LAL_DATA_PATH=/\u0026lt;path_to_wave_data_dir\u0026gt;\u0026#34; \u0026gt;\u0026gt; .bash_profile Copy the waveform data files and place them into this the waveform_data/ dir\nWhere do we get the waveform datafiles from again? Test install with the following script ","date":1568816445,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"6e086b43aefc9f8608e914a799e3dceb","permalink":"https://avivajpeyi.github.io/posts/installing-lalsuite-from-source/","publishdate":"2019-09-19T00:20:45+10:00","relpermalink":"/posts/installing-lalsuite-from-source/","section":"posts","summary":"Source installing LalSuite sucks. Here are instructions that have worked for me.","tags":[],"title":"Installing LalSuite from Source","type":"posts"},{"authors":["Maximiliano Isi","Rory Smith","Salvatore Vitale","T.~J. Massinger","Jonah Kanner","Avi Vajpeyi"],"categories":[],"content":"","date":1533081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682576e3,"objectID":"b678e0e2edcd88dc68f71ba6de5fd54a","permalink":"https://avivajpeyi.github.io/publication/isi-2018-ph-rv-d/","publishdate":"2023-04-27T03:38:09.439504Z","relpermalink":"/publication/isi-2018-ph-rv-d/","section":"publication","summary":"","tags":["General Relativity and Quantum Cosmology","Astrophysics - High Energy Astrophysical Phenomena","Physics - Data Analysis","Statistics and Probability"],"title":"Enhancing confidence in the detection of gravitational waves from compact binaries using signal coherence","type":"publication"}]